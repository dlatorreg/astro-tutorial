---
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro";

export async function getStaticPaths() {
  const allPosts = await Astro.glob("../posts/*.md");

  /*
  Recorre cada entrada Markdown, una a una, y combina cada array de etiquetas en un único array más grande. 
  A continuación, crea un nuevo Set a partir de todas las etiquetas individuales que ha encontrado 
  (para ignorar los valores repetidos). Finalmente, convierte ese conjunto en un array (sin duplicaciones), 
  que puedes usar para mostrar una lista de etiquetas en tu página.
  */
  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
  ];

  /* 
  Una función getStaticPaths siempre debe devolver una lista de objetos que contengan params 
  (cómo llamar a cada ruta de página) y opcionalmente cualquier props (datos que quieras pasar a esas páginas). 
  */
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.frontmatter.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<BaseLayout pageTitle={tag}>
  <p>Entradas etiquetadas con {tag}</p>
  <ul>
    {
      posts.map((post) => (
        <BlogPost url={post.url} title={post.frontmatter.title} />
      ))
    }
  </ul>
</BaseLayout>
